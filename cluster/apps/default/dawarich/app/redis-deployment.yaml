---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dawarich-redis
  namespace: default
  labels:
    app: dawarich
    component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dawarich
      component: redis
  template:
    metadata:
      labels:
        app: dawarich
        component: redis
    spec:
      containers:
        - name: redis
          image: redis:7.4-alpine
          command: ["redis-server"]
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-data
              mountPath: /data
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            exec:
              command: ["redis-cli", "--raw", "incr", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command: ["redis-cli", "--raw", "incr", "ping"]
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: dawarich-redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: dawarich-redis
  namespace: default
  labels:
    app: dawarich
    component: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
      name: redis
  selector:
    app: dawarich
    component: redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dawarich-redis-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-client
  resources:
    requests:
      storage: 2Gi
