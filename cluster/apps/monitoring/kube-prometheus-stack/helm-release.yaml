---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 42.1.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    alertmanager:
      enabled: false
    defaultRules:
      rules:
        alertmanager: false
        etcd: false
        kubeApiserver: false
        kubeApiserverAvailability: false
        kubeApiserverError: false
        kubeApiserverSlos: false
        kubelet: false
        kubePrometheusGeneral: false
        kubePrometheusNodeAlerting: false
        kubePrometheusNodeRecording: false
        kubernetesAbsent: false
        kubernetesApps: false
        kubernetesResources: false
        kubernetesStorage: false
        kubernetesSystem: false
        kubeScheduler: false
        kubeStateMetrics: false
    grafana:
      adminPassword: ${SECRET_GRAFANA_PASSWORD}
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'unifi'
              orgId: 1
              folder: 'UniFi'
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/unifi
            - name: 'teslamate'
              orgId: 1
              folder: Teslamate
              type: file
              disableDeletion: false
              allowUiUpdates: true
              options:
                path: /var/lib/grafana/dashboards/teslamate
      dashboards:
        unifi:
          unifiPollerClientDPI:
            gnetId: 11310
            revision: 4
            datasource: Prometheus
          unifiPollerClientInsights:
            gnetId: 11315
            revision: 8
            datasource: Prometheus
          unifiPollerNetworkSites:
            gnetId: 11311
            revision: 4
            datasource: Prometheus
          unifiPollerUAPInsights:
            gnetId: 11314
            revision: 8
            datasource: Prometheus
          unifiPollerUSGInsights:
            gnetId: 11313
            revision: 8
            datasource: Prometheus
          unifiPollerUSWInsights:
            gnetId: 11312
            revision: 8
            datasource: Prometheus
      extraVolumeMounts:
        - name: grafana-plugins
          existingClaim: grafana-plugins
          mountPath: /var/lib/grafana/plugins
          readOnly: false
      grafana.ini:
        plugins:
          allow_loading_unsigned_plugins: panodata-map-panel
      sidecar:
        dashboards:
          enabled: "true"
          labelValue: "1"
          searchNamespace: "ALL"
          folderAnnotation: grafana_folder
          provider:
            foldersFromFilesStructure: true
      ingress:
        enabled: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "monitor-eye"
          hajimari.io/appName: "Grafana"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-internal-ips-only@kubernetescrd"
        hosts:
          - "g.${SECRET_LAB_DOMAIN}"
          - "grafana.${SECRET_LAB_DOMAIN}"
        tls:
          - secretName: "${SECRET_LAB_DOMAIN/./-}-tls"
            hosts:
              - "g.${SECRET_LAB_DOMAIN}"
              - "grafana.${SECRET_LAB_DOMAIN}"
      plugins:
        - grafana-piechart-panel
        - grafana-clock-panel
        - pr0ps-trackmap-panel
        - natel-plotly-panel
      additionalDataSources:
        - name: influxdb
          access: proxy
          orgId: 1
          type: influxdb
          url: "http://influx-influxdb2.monitoring"
          jsonData:
            defaultBucket: sn0w
            httpMode: POST
            organization: influxdata
            version: Flux
          secureJsonData:
            token: ${INFLUX_TOKEN}
        - name: TeslaMate
          access: proxy
          orgId: 1
          type: postgres
          url: postgresql.default:5432
          database: teslamate
          user: teslamate
          secureJsonData:
            password: ${SECRET_TESLAMATE_POSTGRES_PASSWORD}
          jsonData:
            postgresVersion: 1000
            sslmode: disable
    prometheus:
      prometheusSpec:
        additionalScrapeConfigs:
          - job_name: "node-exporter"
            static_configs:
              - targets:
                  - 'sn0w.lan.${SECRET_LAB_DOMAIN}:9100'
                  - 'pihole.lan.${SECRET_LAB_DOMAIN}:9100'
          - job_name: "hass"
            scrape_interval: 60s
            metrics_path: /api/prometheus

            # Long-Lived Access Token
            bearer_token: ${HASS_BEARER_TOKEN}

            scheme: http
            static_configs:
              - targets: ['homeassistant.lan.${SECRET_LAB_DOMAIN}:8123']
        retention: 365d
        walCompression: true
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "nfs-client"
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
    prometheus-node-exporter:
      hostRootFsMount:
        enabled: false
